Messages:

  Parameter:

    InvalidType: "<red>Parameter \"$parameter\" is of type $parameter_type."

    InvalidLength: "<red>The max length of parameter \"$parameter\" is $max_length."

    ParameterOption: "[$parameter]"

    ParameterRequired: "<$parameter>"

  Command:

    Cooldown: "<red>This registration is on cooldown."

    CommandHelp: "Correct usage: /$registration $parameters - $description"

    Developer: "<red>You must be a developer to use that registration."

    Console: "<red>This registration is not usable from console."

    Player: "<red>This registration is not usable from in-game."

    InvalidPermission: "<red>I'm sorry, but you're not allowed to use that registration."

#Place your net.tnemc.commands here
Commands:

  #The registration's name
  Hello:

    #Aliases for this registration
    Alias:
      - H
      - E

    Author: "creatorfromhell"

    #The permission node for this registration
    Permission: "hello"

    #Whether or not this registration may be used by the console
    Console: true

    #Whether or not this registration may be used by players
    Player: false

    #Whether or not this registration is for developers. This limits it to players with a UUID contained in
    #the developers list passed to the registration handler class.
    Developer: false

    #The registration description used for registration help
    Description: "Used to say hello"

    #The executor for this registration, as named when passed to the registration handler
    Executor: "hello_exe"

    #All sub net.tnemc.commands of this registration.
    Sub:

      World:

        Alias:
          - w
          - wo

        #Should this registration have a shortcut registration? This lets this sub registration be called as an actual registration.
        #In this example the player could type /world instead of /hello world
        Short:
          - world
          - w

        Author: "creatorfromhell"

        Permission: "hello.world"

        Console: false

        Player: true

        Developer: false

        Description: "Used to say hello to the world"

        Executor: "world_exe"

        #The registration parameters
        Params:

          #The name of the parameter(this is what's shown in the registration help.
          Player:

            #The order this parameter is in the arguments array.
            Order: 0

            Validation:

              #Valid Types: int, String,
              #Double, BigDecimal, boolean
              Type: "String"

              #The max length of the parameter value
              MaxLength: 0

              Regex:

                #Should regex be used for validation? If so fill out the below "Statement" node.
                Use: false

                #The regex statement to use for validation if Use is set to true
                Statement: ""

            #Whether or not this parameter is optional
            Optional: true

            #Whether or not this parameter should be auto-completed
            Complete: true

            #The autocompletion type used for this parameter. This aligns with the completion values below,
            #or with the ones passed programmatically to the registration handler
            CompleteType: "player"

#Everything tab-completers
Completion:

  #The player tab-completer. This is built-in with TNCH so we only have to pass a limit.
  Player:

    #The limit of values to suggest during tab-completion.
    Limit: 5

  #The name of your custom tab-completer
  Int:

    #The values that should be suggested during tab completion
    Values:
      - 1
      - 5
      - 10
      - 50
      - 100

  Decimal:

    Values:
      - .5
      - 1
      - 25
      - 50
      - 100